{
  "sheban": {
    "prefix": "#!",
    "description": "binLua",
    "body": [
      "#!/usr/bin/env lua",
      "$1"
    ]
  },
  "fold": {
    "prefix": "fold",
    "description": "fold",
    "body": [
      "-- ${1:comment} {{",
      "${VISUAL}",
      "-- END $1 }}"
    ]
  },
  "class": {
    "prefix": "cl",
    "body": [
      "${1:className} = {}\n",
      "$1.${2:new} = function($3)",
      "\tlocal ${4:varName} = ${5:{}}\n",
      "\t${6: --code}\n",
      "\treturn $4",
      "end"
    ],
    "description": "Create a class"
  },
  "inline-function": {
    "prefix": "fuil",
    "body": ["local ${1:name} = function($2)", "\t${0:-- code}", "end"]
  },
  "fun": {
    "prefix": "fun",
    "description": "function",
    "body": [
      "function ${1:fname}(${2:...})",
      "${0:-- body}",
      "end"
    ]
  },
  "for": {
    "prefix": "for",
    "description": "forloop",
    "body": [
      "for ${1:i}=${2:1},${3:10} do",
      "${0:print(i)}",
      "end"
    ]
  },
  "foreach": {
    "prefix": "fore",
    "body": ["for i, ${1:x} in pairs(${2:table}) do", "\t$0", "end"]
  },
  "fori": {
    "prefix": "fori",
    "description": "foreinpears",
    "body": [
      "for ${1:i},${2:v} in ipairs(${3:table_name}) do",
      "${0:-- body}",
      "end"
    ]
  },
  "if": {
    "prefix": "if",
    "description": "if statement",
    "body": [
      "if ${1:condition} then",
      "${2:-- body}",
      "end"
    ]
  },
  "ife": {
    "prefix": "ife",
    "description": "ifelse",
    "body": [
      "if ${1:condition} then",
      "${2:-- if condition}",
      "else",
      "${0:-- else}",
      "end"
    ]
  },
  "elif": {
    "prefix": "elif",
    "description": "elseif",
    "body": [
      "elseif ${1:condition} then",
      "${0:--body}"
    ]
  },
  "local": {
    "prefix": "local",
    "description": "local",
    "body": [ "local ${1:x} = ${0:1}" ]
  },
  "im": {
    "prefix": "im",
    "description": "import",
    "body": [
      "import \"${1:import file}\""
    ]
  },
  "require": {
    "prefix": "req",
    "body": ["require(\"${1:module}\")"],
    "description": "Require module"
  },
  "return": {
    "prefix": "rt",
    "body": ["return $0"],
    "description": "return value"
  },
  "repeat": {
    "prefix": "repeat",
    "description": "repeat",
    "body": [
      "repeat",
      "${1:--body}",
      "until ${0:condition}"
    ]
  },
  "print": {
    "prefix": "print",
    "description": "print",
    "body": [
      "print(\"${1:string}\")"
    ]
  },
  "self": {
    "prefix": "self:",
    "body": ["function self:${1:methodName}($2)", "\t$0", "end"]
  },
  "vim.notify": {
    "prefix": "vimnotify",
    "description": "vim.notify('${1:SaySomething}')",
    "body": [
      "vim.notify('${1:SaySomething}')"
    ]
  },
  "while": {
    "prefix": "while",
    "description": "while",
    "body": [
      "while ${1:condition} do",
      "${0:--body}",
      "end"
    ]
  }
}
